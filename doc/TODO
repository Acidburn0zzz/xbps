xbps-src:
 * Personalized scripts per template to unpack distfiles.
 * Multiple URLs to download source distribution files, aliases, etc.
   Something like ${sourceforge} to pick up any specified mirror on the list.
 * Fix -C flag while building packages via chroot.

Packages:
 * Create /etc/issue.
 * Add a trigger for fc-cache.
 * Add a trigger to (un)register users/groups. Currently packages that
   require user/groups use custom INSTALL/REMOVE scripts, which adds
   a lot of duplicated work.
 * Add support to stop and restart package's OpenRC service while
   removing and upgrading a package.
   [PARTIAL: at pre-remove the services are stopped but not yet restarted]
 * How to handle kernel package upgrades? dpkg seems to keep previous
   package and its initramfs, and a dummy package depends on the latest one.
   I think this is the best option.
 * Fix initramfs-tools trigger for $pkgname != kernel.
 * Fix initramfs-tools 'update-initramfs -a'.
 * Fix HAL/PolicyKit for nonroot to be able to admin tasks.
 * Fix loadkeys(1) incorrectly loading the olpc keymap vs qwerty.

xbps-bin:
 * Add support to install binary packages without any repository.
 * Add a flag to reinstall a package version that is already installed,
   overwritting files on disk and updating required_by if required.
   Perhaps change the automatic-install object to false, like pkg_install
   from NetBSD do.
 * Implement shell style match patterns with fnmatch() for install, update
   and remove.
 * Make -f flag to overwrite files when installing, and to ignore
   files with wrong checksum or unexistent when removing.
   [PARTIAL: only unexistent files are ignored when removing]

libxbps:
 * Add support to upgrade packages but overwritting current files;
   this will fix libc, sh and others. An "essential" boolean obj
   seems to be a good way to find such packages, like dpkg.
   [PARTIAL: files are overwritten but obsolete files are not
    taken into account yet]

xbps-repo:
 * Add support to add only specified packages, rather than looking
   at all files in a directory.
 * Add support for remote repositories, requires libfetch.
