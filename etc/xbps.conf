# Configuration file for XBPS.
# ============================
#
# Root directory.
#RootDir = /
#
# Cache directory to store downloaded binary packages.
# If string begins with '/' it will be treated as full path,
# otherwise it will be treated as relative to the root-directory.
#CacheDir = var/cache/xbps
#
# Default global limit of cached connections when fetching files.
#FetchCacheConnection = 10
#
# Default per-host limit of cached connections when fetching files.
#FetchCacheConnectionPerHost = 3
#
# Default timeout limit for connections, in seconds.
#FetchTimeoutConnection = 30
#
# Enable syslog messages, set the value to false or 0 to disable.
#Syslog = true

# Number of packages to be processed in a transaction to trigger
# a flush to the master package database. Set it to 0 to make it
# only flush at required points.
#
#TransactionFrequencyFlush = 5

# Repositories.
#
# You can specify here your list of repositories, the first
# repository that contains a package will be used for most
# targets in xbps-bin(8) and xbps-repo(8), with the exception
# for updating on which all repositories will be looked at and
# the newest version will be choosen.
#
# Optionally a non default HTTP port can also be specified such as:
# 	http://foo.local:8080/xbps-repo
#
# The order matters, and the top-most matching a package pattern
# or name will be used.
#
# By default we use the official "public" repositories. You can add
# your own repositories by specifying the path to the directory
# where the index.plist file is stored.
#
# Repositories not matching the host architecture are simply ignored.
#
repositories = {
	http://xbps.goodluckwith.us/binpkgs/i686,
	http://xbps.goodluckwith.us/binpkgs/noarch,
	http://xbps.goodluckwith.us/binpkgs/nonfree/i686,
	http://xbps.nopcode.org/repos/current/x86_64,
	http://xbps.nopcode.org/repos/current/noarch,
	http://xbps.nopcode.org/repos/current/nonfree/x86_64
}

# Virtual packages.
#
# The following syntax is used:
# 	virtual-package <realpkgname> { targets = <virtualpkgname-version> }
#
# If a package supports multiple virtual packages these can be
# specified in the 'targets' option such as:
#
# 	virtual-package foo { targets = blah-0, baz-1, ... }
#
